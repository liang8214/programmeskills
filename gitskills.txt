mkdir <filename>  创建文件夹
cd     进入文件夹
pwd    查看当前目录
cat <file name> 显示文件内容
rm  <file name> 删除文件

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

$ ssh-keygen -t rsa -C "youremail@example.com"  创建密钥


git init  把当前目录变成可管理的     仓库（Working Directory）――》   .git 是 repository（版本库），包含 stage 和branch
git add  <filename>  把文件添加到   stage(暂存区）
git commit -m "备注“  把文件从暂存区添加到 branch （分支）

git status  仓库当前状态
git diff  <filename> 查看文件修改情况
git diff HEAD -- readme.txt   命令可以查看工作区和版本库里面最新版本的区别：

git log  查看修改记录  --pretty=oneline
git reset --hard  commit_id  HEAD^   回退操作   HEAD代表指针
git reset HEAD file 可以把暂存区的修改撤销掉（unstage），重新放回工作区：
 

git checkout -- file可以丢弃工作区的修改：总之，就是让这个文件回到最近一次git commit或git add时的状态。
                    (其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。)


删除文件

git rm  <file>    
git commit          :从版本库中删除该文件，那就用命令git rm删掉，并且git commit

-------------------------------------------------------
远程库管理

从远程库clone
git clone  git@github.com:michaelliao/gitskills.git

本地已有库与远程库关联：
 git remote add origin git@github.com:michaelliao/learngit.git

把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。￥git push -u origin master

由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。git push origin master